# k3d configuration file, saved as e.g. /home/me/myk3dcluster.yaml
apiVersion: k3d.io/v1alpha5 # this will change in the future as we make everything more stable
kind: Simple # internally, we also have a Cluster config, which is not yet available externally
metadata:
  name: clugest # name that you want to give to your cluster (will still be prefixed with `k3d-`)
servers: 1 # same as `--servers 1`
agents: 5 # same as `--agents 2`
kubeAPI: # same as `--api-port myhost.my.domain:6445` (where the name would resolve to 127.0.0.1)
  host: "k8s.clugest.home" # important for the `server` setting in the kubeconfig
  hostIP: "127.10.1.1" # where the Kubernetes API will be listening on
  hostPort: "443" # where the Kubernetes API listening port will be mapped to on your host system
image: rancher/k3s:v1.30.4-k3s1 # same as `--image rancher/k3s:v1.20.4-k3s1`
network: clugest-k8s-net # same as `--network my-custom-net`
token: 0eh7gdfn07453y708n9hy70n8gdfs # same as `--token superSecretToken`
ports:
  - port: 127.10.1.2:80:80 # same as `--port '8080:80@loadbalancer'`
    nodeFilters:
      - loadbalancer
registries:
  config: |
    mirrors:
      ghcr.io:
        endpoint:
          - https://ghcr.io
#    configs:
#      ghcr.io:
#        auth:
#          username: <username>
#          password: <password>
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
    timeout: "60s" # wait timeout before aborting; same as `--timeout 60s`
    disableLoadbalancer: false # same as `--no-lb`
    disableImageVolume: false # same as `--no-image-volume`
    disableRollback: false # same as `--no-Rollback`
    loadbalancer:
      configOverrides:
        - settings.workerConnections=2048
  k3s: # options passed on to K3s itself
    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`
      - arg: --tls-san=k8s.clugest.home
        nodeFilters:
          - server:*
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true # also set current-context to the new cluster's context; same as `--kubeconfig-switch-context` (default: true)